package Views;


import Model.RegistroCorporal;
import DAO.DAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.SwingConstants;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author thaina.matos
 */
public class TelaRegistroAdmin extends javax.swing.JFrame {

    /**
     * Creates new form TelaRegistro
     */
    public TelaRegistroAdmin() {
        initComponents();
        ReadTable();
    }

    private void ReadTable() {
        DefaultTableModel model = (DefaultTableModel) RegisterTable.getModel();
        model.setNumRows(0);
        DAO dao = new DAO();

        for (RegistroCorporal p : dao.read()) {
            model.addRow(new Object[]{
                p.getIdPessoa(),
                p.getIdRegistro(),
                p.getData(),
                p.getPeso(),
                p.getAltura()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alturaLabel = new javax.swing.JLabel();
        alturaTextField = new javax.swing.JTextField();
        pesoTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        kgLabel = new javax.swing.JLabel();
        editarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        adicionarButton1 = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        calculoButton = new javax.swing.JButton();
        dadosTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        RegisterTable = new javax.swing.JTable();
        registroTextField = new javax.swing.JTextField();
        Register = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        alturaLabel.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        alturaLabel.setText("ALTURA ");
        getContentPane().add(alturaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 70, 30));

        alturaTextField.setBackground(new java.awt.Color(222, 221, 221));
        alturaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alturaTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(alturaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 110, -1));

        pesoTextField.setBackground(new java.awt.Color(222, 221, 221));
        pesoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesoTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(pesoTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 110, -1));

        jLabel2.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        jLabel2.setText("PESO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 40, 40, 30));

        kgLabel.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        kgLabel.setText("/ kg");
        getContentPane().add(kgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, 30));

        editarButton.setBackground(new java.awt.Color(0, 0, 0));
        editarButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        editarButton.setForeground(new java.awt.Color(255, 255, 255));
        editarButton.setText("Atualizar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 120, 30));

        jLabel1.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        jLabel1.setText("/ metros");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, 30));

        adicionarButton1.setBackground(new java.awt.Color(0, 0, 0));
        adicionarButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        adicionarButton1.setForeground(new java.awt.Color(255, 255, 255));
        adicionarButton1.setText("Cadastrar");
        adicionarButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(adicionarButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 120, 30));

        menuButton.setBackground(new java.awt.Color(0, 0, 0));
        menuButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        menuButton.setForeground(new java.awt.Color(255, 255, 255));
        menuButton.setText("Menu");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });
        getContentPane().add(menuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 120, 30));

        removerButton.setBackground(new java.awt.Color(0, 0, 0));
        removerButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        removerButton.setForeground(new java.awt.Color(255, 255, 255));
        removerButton.setText("Excluir");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(removerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 40, 120, 30));

        calculoButton.setBackground(new java.awt.Color(0, 0, 0));
        calculoButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        calculoButton.setForeground(new java.awt.Color(255, 255, 255));
        calculoButton.setText("Cálculos");
        calculoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculoButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calculoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 120, 50));

        dadosTextField2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adicionar informações corporais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Heiti TC", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N
        dadosTextField2.setEnabled(false);
        getContentPane().add(dadosTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 800, 120));

        RegisterTable.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        RegisterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdPessoa", "IdRegistro", "Data", "Peso", "Altura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Long.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RegisterTable.setAutoscrolls(false);
        RegisterTable.setShowHorizontalLines(true);
        RegisterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterTableMouseClicked(evt);
            }
        });
        RegisterTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(RegisterTable);
        if (RegisterTable.getColumnModel().getColumnCount() > 0) {
            RegisterTable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 780, 290));

        registroTextField.setForeground(new java.awt.Color(153, 153, 153));
        registroTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Heiti TC", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N
        registroTextField.setCaretColor(new java.awt.Color(153, 153, 153));
        registroTextField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        registroTextField.setEnabled(false);
        registroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(registroTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 800, 320));

        Register.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/TelaRegistro.jpg"))); // NOI18N
        getContentPane().add(Register, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void alturaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alturaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alturaTextFieldActionPerformed

    private void adicionarButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarButton1ActionPerformed
        double peso = (Double.parseDouble(pesoTextField.getText()));
        double altura = (Double.parseDouble(alturaTextField.getText()));

        RegistroCorporal registro = new RegistroCorporal();
        DAO dao = new DAO();
        registro.setPeso(peso);
        registro.setAltura(altura);
        dao.AdicionarRegistro(registro);
        pesoTextField.setText("");
        alturaTextField.setText("");
        ReadTable();


    }//GEN-LAST:event_adicionarButton1ActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        TelaMenuAdmin telaMenu = new TelaMenuAdmin(); 
        telaMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void registroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registroTextFieldActionPerformed

    private void pesoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pesoTextFieldActionPerformed

    private void RegisterTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterTableKeyReleased
        
    }//GEN-LAST:event_RegisterTableKeyReleased

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        
        if(RegisterTable.getSelectedRow() != -1){
            
            double peso = (Double.parseDouble(pesoTextField.getText()));
            double altura = (Double.parseDouble(alturaTextField.getText()));
            
            RegistroCorporal registro = new RegistroCorporal();
            DAO dao = new DAO();
            
            registro.setIdRegistro((int)RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 1));
            registro.setIdPessoa((int)RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 0));
            registro.setPeso(peso);
            registro.setAltura(altura);
            dao.AtualizarRegistro(registro);
            
            ReadTable();
            
        }
        
        
    }//GEN-LAST:event_editarButtonActionPerformed

    private void RegisterTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterTableKeyPressed

        
    }//GEN-LAST:event_RegisterTableKeyPressed

    private void RegisterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterTableMouseClicked
        if(RegisterTable.getSelectedRow() != -1){
            pesoTextField.setText(RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 3).toString());
            
            alturaTextField.setText(RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 4).toString());
        }
    }//GEN-LAST:event_RegisterTableMouseClicked

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        if(RegisterTable.getSelectedRow() != -1){

            RegistroCorporal registro = new RegistroCorporal();
            DAO dao = new DAO();
            
            registro.setIdRegistro((int)RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 1));
            dao.removerRegistro(registro);
            
            ReadTable();
            
        }
    }//GEN-LAST:event_removerButtonActionPerformed

    private void calculoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculoButtonActionPerformed
        if(RegisterTable.getSelectedRow() != -1){
            double peso = (Double.parseDouble(pesoTextField.getText()));
            double altura = (Double.parseDouble(alturaTextField.getText()));
            
            RegistroCorporal registro = new RegistroCorporal();
            DAO dao = new DAO();
            registro.setPeso(peso);
            registro.setAltura(altura);
            registro.setIdRegistro((int)RegisterTable.getValueAt(RegisterTable.getSelectedRow(), 1));

            double calculoImc = peso/ Math.pow(altura, 2);   
            String imc = String.format("%.2f", calculoImc);
            
            double calculoAgua = peso * 35;   
            String consumoAgua = String.format("%.0f", calculoAgua);
            
            double calculoCarboidrato = peso * 8;   
            String consumoCarboidrato = String.format("%.0f", calculoCarboidrato);
            
            if (calculoImc < 18.5) {
                JOptionPane.showMessageDialog(null, " Seu IMC: " + imc + " (magreza)"+"\n \n É recomendado que você consuma " + consumoAgua +
                    " ml de água por dia e aproximadamente " + consumoCarboidrato + " gramas de carboidrato diário de acordo com a sua estatura." +
                    "\n \n Observação: Seu IMC está muito abaixo do normal, logo indicamos que procure um médico para analisar as suas"
                        + "necessidades com uma maior precisão.", 
                        "MAGREZA:", JOptionPane.INFORMATION_MESSAGE);    
            }
            else{
                if (calculoImc > 18.5 && calculoImc < 24.9) {
                JOptionPane.showMessageDialog(null, " Seu IMC: " + imc + " (normal)"+"\n \n É recomendado que você consuma " + consumoAgua +
                    " ml de água por dia e aproximadamente " + consumoCarboidrato + " gramas de carboidrato diário de acordo com a sua estatura." +
                    "\n \n Observação: Seu IMC está dentro da normalidade, mas caso queira uma analise com mais precisão,"
                            + " recomendamos que procure um médico.",
                        "NORMAL:", JOptionPane.INFORMATION_MESSAGE);    
                }
                else{
                    if (calculoImc > 25.0 && calculoImc < 29.9) {
                    JOptionPane.showMessageDialog(null, " Seu IMC: " + imc + " (sobrepeso)"+"\n \n É recomendado que você consuma " + consumoAgua +
                        " ml de água por dia e aproximadamente " + consumoCarboidrato + " gramas de carboidrato diário de acordo com a sua estatura." +
                        "\n \n Observação: Seu IMC está acima do normal, logo indicamos que procure um médico para analisar as suas"
                            + "necessidades com uma maior precisão.", 
                            "SOBREPESO:", JOptionPane.INFORMATION_MESSAGE);    
                    }
                    else{
                        if (calculoImc > 30.0 && calculoImc < 39.9){
                        JOptionPane.showMessageDialog(null, " Seu IMC: " + imc + " (obesidade)"+"\n \n É recomendado que você consuma " + consumoAgua +
                            " ml de água por dia e aproximadamente " + consumoCarboidrato + " gramas de carboidrato diário de acordo com a sua estatura." +
                            "\n \n Observação: Seu IMC está muito acima da normalidade, logo indicamos que procure um médico para analisar as suas"
                            + "necessidades com uma maior precisão.", 
                                "OBESIDADE GRAU I:", JOptionPane.ERROR_MESSAGE);
                        }else{
                            JOptionPane.showMessageDialog(null, " Seu IMC: " + imc + " (obesidade grave)"+"\n \n É recomendado que você consuma " + consumoAgua +
                                " ml de água por dia e aproximadamente " + consumoCarboidrato + " gramas de carboidrato diário de acordo com a sua estatura." +
                                "\n \n Observação: Seu IMC está muito elevado, logo indicamos que procure um médico urgentemente para analisar as suas"
                                    + "necessidades com uma maior precisão.", 
                                    "OBESIDADE GRAU II:", JOptionPane.ERROR_MESSAGE);    
                        }
                    }   
                }    
            }  
        }
    }//GEN-LAST:event_calculoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRegistroAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Register;
    private javax.swing.JTable RegisterTable;
    private javax.swing.JButton adicionarButton1;
    private javax.swing.JLabel alturaLabel;
    private javax.swing.JTextField alturaTextField;
    private javax.swing.JButton calculoButton;
    private javax.swing.JTextField dadosTextField2;
    private javax.swing.JButton editarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kgLabel;
    private javax.swing.JButton menuButton;
    private javax.swing.JTextField pesoTextField;
    private javax.swing.JTextField registroTextField;
    private javax.swing.JButton removerButton;
    // End of variables declaration//GEN-END:variables

}
